version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: payment-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payment_system
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: payment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: payment-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: payment-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:29092 --list || exit 1
      interval: 10s
      timeout: 10s
      retries: 5

  api_gateway:
    build:
      context: .
      dockerfile: ./app/api_gateway/Dockerfile
    container_name: payment-api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/payment_system
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/payment_system
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: uvicorn app.api_gateway.main:app --host 0.0.0.0 --port 8000 --reload

  auth_service:
    build:
      context: .
      dockerfile: ./app/auth_service/Dockerfile
    container_name: payment-auth-service
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/payment_system
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/payment_system
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: uvicorn app.auth_service.main:app --host 0.0.0.0 --port 8001 --reload

  account_service:
    build:
      context: .
      dockerfile: ./app/account_service/Dockerfile
    container_name: payment-account-service
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/payment_system
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/payment_system
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: uvicorn app.account_service.main:app --host 0.0.0.0 --port 8002 --reload

  transaction_service:
    build:
      context: .
      dockerfile: ./app/transaction_service/Dockerfile
    container_name: payment-transaction-service
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/payment_system
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/payment_system
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: uvicorn app.transaction_service.main:app --host 0.0.0.0 --port 8003 --reload

  notification_service:
    build:
      context: .
      dockerfile: ./app/notification_service/Dockerfile
    container_name: payment-notification-service
    depends_on:
      - kafka
      - redis
    environment:
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ENVIRONMENT=development
      - PYTHONPATH=/app
    volumes:
      - ./:/app
    command: python -m app.notification_service.main

volumes:
  postgres_data:
  redis_data: 