---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: payment-system
  labels:
    app: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ${REGISTRY}/payment-system/api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: payment-system-config
        - secretRef:
            name: payment-system-secrets
        env:
        - name: PORT
          value: "8000"
        - name: SERVICE_NAME
          value: "api_gateway"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: payment-system
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: ${REGISTRY}/payment-system/auth-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
        envFrom:
        - configMapRef:
            name: payment-system-config
        - secretRef:
            name: payment-system-secrets
        env:
        - name: PORT
          value: "8001"
        - name: SERVICE_NAME
          value: "auth_service"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Account Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
  namespace: payment-system
  labels:
    app: account-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
    spec:
      containers:
      - name: account-service
        image: ${REGISTRY}/payment-system/account-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8002
        envFrom:
        - configMapRef:
            name: payment-system-config
        - secretRef:
            name: payment-system-secrets
        env:
        - name: PORT
          value: "8002"
        - name: SERVICE_NAME
          value: "account_service"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Transaction Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-service
  namespace: payment-system
  labels:
    app: transaction-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: transaction-service
  template:
    metadata:
      labels:
        app: transaction-service
    spec:
      containers:
      - name: transaction-service
        image: ${REGISTRY}/payment-system/transaction-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8003
        envFrom:
        - configMapRef:
            name: payment-system-config
        - secretRef:
            name: payment-system-secrets
        env:
        - name: PORT
          value: "8003"
        - name: SERVICE_NAME
          value: "transaction_service"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Notification Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: payment-system
  labels:
    app: notification-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: ${REGISTRY}/payment-system/notification-service:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: payment-system-config
        - secretRef:
            name: payment-system-secrets
        env:
        - name: SERVICE_NAME
          value: "notification_service"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m" 